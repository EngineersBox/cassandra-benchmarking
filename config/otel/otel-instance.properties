otel.javaagent.logging=simple
otel.javaagent.enabled=false
# otel.javaagent.debug=true
# Disable all instrumentation by default and enable only the ones we want
otel.instrumentation.common.default-enabled=true
# java.util.concurrent
otel.instrumentation.executors.enabled=true
# java Runtime
otel.instrumentation.runtime-telemetry.enabled=true
# Metrics about OTEL itself
# otel.instrumentation.opentelemetry-extension-annotations=false
# otel.instrumentation.opentelemetry-instrumentation-annotations=false
# otel.instrumentation.opentelemetry-api=false
# We don't collect Cassandra metrics on-instance since we pull them externally
# from the secondary server to avoid additional overhead on-instance
# otel.instrumentation.dropwizard-metrics.enabled=false
# otel.instrumentation.dropwizard-views.enabled=false
otel.instrumentation.cassandra.enabled=true
otel.instrumentation.methods.enabled=true
# otel.traces.sampler=always_on
# otel.metrics.exporter=otlp
# otel.logs.exporter=otlp
# otel.traces.exporter=otlp
# otel.exporter.otlp.endpoint=http://localhost:4318
# otel.exporter.otlp.protocol=http/protobuf
# otel.exporter.otlp.insecure=true
# otel.jmx.target.system=cassandra,jvm
# otel.jmx.target.system=jvm
otel.jmx.service.url=service:jmx:rmi://127.0.0.1/jndi/rmi://127.0.0.1:7199/jmxrmi
otel.jmx.remote.registry.ssl=false
otel.service.name=Cassandra
otel.resource.attributes=application=Cassandra
