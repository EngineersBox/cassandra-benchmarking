receivers:
  otlp:
    protocols:
      grpc:
      http:
  prometheus/collector:
    config:
      scrape_configs:
        - job_name: 'opentelemetry-collector'
          static_configs:
            - targets: ['localhost:8888']
  jmx:
    jar_path: /var/lib/otel/opentelemetry-jmx-metrics.jar
    endpoint: cassandra:7199
    target_system: cassandra,jvm
    collection_interval: 10s
    resource_attributes:
      endpoint: cassandra:7199

processors:
  resourcedetection:
    detectors: ["system"]
    system:
      hostname_sources: ["os"]
  batch:

exporters:
  prometheusremotewrite:
    endpoint: http://localhost:9090/api/v1/write
    add_metric_suffixes: true
  otlphttp:
    endpoint: http://localhost:4418
  loki:
    endpoint: http://localhost:3100/loki/api/v1/push
  logging/metrics:
    verbosity: detailed
  logging/traces:
    verbosity: detailed
  logging/logs:
    verbosity: detailed
  file/metrics:
    path: /var/log/otel/metrics.log
  file/traces:
    path: /var/log/otel/traces.log
  file/logs:
    path: /var/log/otel/logs.log

service:
  pipelines:
    traces:
      receivers:
      - otlp
      processors:
      - batch
      #exporters: [otlphttp]
      exporters:
      - otlphttp
      - logging/traces
      - file/traces
    metrics:
      receivers:
      - otlp
      - prometheus/collector
      - jmx
      processors:
      - batch
      - resourcedetection
      # - resourceattributetransposer
      # - resource
      #exporters: [prometheusremotewrite]
      exporters:
      - prometheusremotewrite
      - logging/metrics
      - file/metrics
    logs:
      receivers:
      - otlp
      processors:
      - batch
      #exporters: [loki]
      exporters:
      - loki
      - logging/logs
      - file/logs
